<project name="Selenium Grid Core" default="package" basedir=".">

  <description>Selenium Grid Core</description>

  <property file="${basedir}/../project.properties"/>
  <property name="name" value="Selenium Grid Core"/>
  <property name="artifact" value="selenium-grid-core"/>
  <property name="version" value="SNAPSHOT"/>
  <tstamp/>

  <property name="build.src" location="src/main"/>
  <property name="build.output" location="target/classes"/>
  <property name="dist" location="${basedir}/target/dist"/>
  <property name="test.src" location="src/test/unit/java"/>
  <property name="test.output" location="target/test-classes"/>
  <property name="test.reports" location="target/test-reports"/>
  <property name="jruby.test.dir" value="${basedir}/src/test/unit" />

  <path id="jruby.classpath">
    <fileset dir="${basedir}/../lib/jruby-1.0.2">
      <include name="jruby.jar"/>
    </fileset>
    <pathelement path="${basedir}/../lib/jruby-1.0.2/ruby/1.8"/>
  </path>

  <path id="compile.classpath">
    <fileset dir="${basedir}/../lib">
      <include name="jyaml-1.3.jar"/>
      <include name="commons-httpclient-3.0.1.jar"/>
      <include name="commons-codec-1.3.jar"/>
      <include name="commons-logging-1.0.4.jar"/>
    </fileset>
    <pathelement path="${java.class.path}/"/>
  </path>

  <path id="testing.classpath">
    <fileset dir="${basedir}/../lib">
      <include name="junit-4.4.jar"/>
    </fileset>
    <pathelement location="${build.output}"/>
    <pathelement path="${java.class.path}/"/>
  </path>

  <path id="mocking.classpath">
    <fileset dir="${basedir}/../lib">
      <include name="jbehave-1.0.1.jar"/>
      <include name="jmock-junit4-2.2.0.jar"/>
      <include name="jmock-legacy-2.2.0.jar"/>
      <include name="proxytoys-0.2.1.jar"/>
      <include name="objenesis-1.0.jar"/>
      <include name="jmock-2.2.0.jar"/>
      <include name="cglib-nodep-2.1_3.jar"/>
    </fileset>
  </path>

  <target name="compile" description="compile the source ">
    <mkdir dir="${build.output}"/>
    <javac srcdir="${build.src}"
           destdir="${build.output}"
           source="1.5"
           target="1.5">
      <classpath refid="compile.classpath"/>
    </javac>
    <copy todir="${build.output}" verbose="true">
      <fileset dir="${build.src}" includes="**/*.yml"/>
    </copy>
  </target>

  <target name="jruby-test" depends="compile" description="Run JRuby Tests">
    <java classname="org.jruby.Main" fork="true" failonerror="true">
      <classpath refid="compile.classpath"/>
      <classpath refid="testing.classpath"/>
      <classpath refid="jruby.classpath"/>

      <arg value="-I"/>
      <arg value="${jruby.test.dir}"/>
      <arg value="${jruby.test.dir}/all_tests.rb"/>
    </java>
  </target>
  
  <target name="test" depends="compile, jruby-test" description="run tests">
    <mkdir dir="${test.output}"/>
    <mkdir dir="${test.reports}"/>

    <javac srcdir="${test.src}"
           destdir="${test.output}"
           excludes="**/package.html"
           source="1.5"
           target="1.5"
           debug="true"
           deprecation="true">
      <classpath refid="compile.classpath"/>
      <classpath refid="testing.classpath"/>
      <classpath refid="mocking.classpath"/>
    </javac>
    <copy todir="${test.output}" verbose="true">
      <fileset dir="${test.src}" includes="**/*.html"/>
    </copy>
    <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" dir="${test.reports}">
      <classpath refid="compile.classpath"/>
      <classpath refid="testing.classpath"/>
      <classpath refid="mocking.classpath"/>
      <classpath location="${build.output}"/>
      <classpath location="${test.output}"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="xml"/>
      <formatter type="plain"/>
      <batchtest todir="${test.reports}">
        <fileset dir="${test.src}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="package" depends="test" description="Package as a jar">
    <mkdir dir="${dist}/lib"/>
    <jar jarfile="${dist}/lib/${artifact}-${version}.jar" basedir="${build.output}">
      <manifest>
        <attribute name="Main-Class" value="com.thoughtworks.selenium.grid.hub.HubServer"/>
        <attribute name="Built-By" value="OpenQA.org"/>
        <attribute name="Build-Time" value="${DSTAMP}${TSTAMP}"/>
        <section name="common">
          <attribute name="Specification-Title" value="${name}"/>
          <attribute name="Specification-Version" value="${version}"/>
          <attribute name="Specification-Vendor" value="OpenQA.org"/>
        </section>
      </manifest>
    </jar>
  </target>

  <target name="clean" description="Remove generated artifacts">
    <delete dir="target"/>
  </target>

</project>
