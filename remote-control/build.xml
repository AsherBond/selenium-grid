<project name="Selenium Grid Remote Control" default="package-standalone" basedir=".">

  <description>Selenium Grid Remote Control</description>

  <property file="${basedir}/../project.properties" />
  <property name="name" value="Selenium Grid Remote Control"/>
  <property name="artifact" value="selenium-grid-remote-control"/>
  <property name="version" value="SNAPSHOT"/>
  <tstamp/>


  <property name="build.src" location="src/main/java"/>
  <property name="build.output" location="target/classes"/>
  <property name="dist" location="target/dist"/>
  <property name="test.src" location="src/test/unit/java"/>
  <property name="test.output" location="target/test-classes"/>
  <property name="test.reports" location="target/test-reports"/>
  <property name="jruby.test.dir" value="${basedir}/src/test/unit" />

  <path id="compile.classpath">
    <fileset dir="${basedir}/lib">
      <include name="selenium-server-*.jar"/>
    </fileset>
    <fileset dir="${basedir}/../lib">
      <include name="commons-httpclient-3.0.1.jar"/>
      <include name="commons-codec-1.3.jar"/>
      <include name="commons-logging-1.0.4.jar"/>
    </fileset>
    <pathelement location="${basedir}/../core/target/classes"/>    
    <pathelement path="${java.class.path}/"/>
  </path>

  <path id="testing.classpath">
    <fileset dir="${basedir}/../lib">
      <include name="junit-4.4.jar"/>
    </fileset>
    <pathelement location="${build.output}"/>
    <pathelement path="${java.class.path}/"/>
  </path>

  <path id="mocking.classpath">
    <fileset dir="${basedir}/../lib">
      <include name="jbehave-1.0.1.jar"/>
      <include name="jmock-junit4-2.2.0.jar"/>
      <include name="jmock-legacy-2.2.0.jar"/>
      <include name="proxytoys-0.2.1.jar"/>
      <include name="objenesis-1.0.jar"/>
      <include name="jmock-2.2.0.jar"/>
      <include name="cglib-nodep-2.1_3.jar"/>
    </fileset>
  </path>

  <path id="runtime.classpath">
    <fileset dir="${basedir}/lib">
      <include name="selenium-server-*.jar"/>
    </fileset>
    <!-- Selenium Server must be first in classpath -->
    <fileset dir="${dist}/lib">
      <include name="selenium-grid-remote-control-standalone-${version}.jar"/>
    </fileset>
    <pathelement path="${java.class.path}/"/>
  </path>

  <path id="jruby.classpath">
    <fileset dir="${basedir}/../lib/jruby-1.1-RC2">
      <include name="jruby.jar"/>
    </fileset>
    <pathelement path="${basedir}/../lib/jruby-1.1-RC2/ruby/1.8"/>
  </path>
  
  <target name="compile" description="compile the source ">
    <mkdir dir="${build.output}"/>
    <javac srcdir="${build.src}"
           destdir="${build.output}"
           source="1.5"
           target="1.5">
      <classpath refid="compile.classpath"/>
    </javac>
  </target>

  <target name="test" depends="compile" description="Run JRuby Tests">
    <java classname="org.jruby.Main" fork="true" failonerror="true">
      <classpath refid="compile.classpath"/>
      <classpath refid="testing.classpath"/>
      <classpath refid="jruby.classpath"/>

      <arg value="-I"/>
      <arg value="${jruby.test.dir}"/>
      <arg value="${jruby.test.dir}/all_tests.rb"/>
    </java>
  </target>
  
  <target name="package" depends="test" description="Package as a jar">
    <mkdir dir="${dist}/lib"/>
    <jar jarfile="${dist}/lib/${artifact}-${version}.jar" basedir="${build.output}">
      <manifest>
        <attribute name="Main-Class"
                   value="com.thoughtworks.selenium.grid.remotecontrol.SelfRegisteringRemoteControlLauncher"/>
        <attribute name="Built-By" value="OpenQA.org"/>
        <attribute name="Build-Time" value="${DSTAMP}${TSTAMP}"/>
        <section name="common">
          <attribute name="Specification-Title" value="${name}"/>
          <attribute name="Specification-Version" value="${version}"/>
          <attribute name="Specification-Vendor" value="OpenQA.org"/>
        </section>
      </manifest>
    </jar>
  </target>

  <target name="package-standalone" depends="package" description="Package as a jar including all dependencies">
    <tstamp/>
    <mkdir dir="${dist}/lib"/>
    <jar jarfile="${dist}/lib/${artifact}-standalone-${version}.jar">
      <manifest>
        <attribute name="Main-Class"
                   value="com.thoughtworks.selenium.grid.remotecontrol.SelfRegisteringRemoteControlLauncher"/>
        <attribute name="Built-By" value="OpenQA.org"/>
        <attribute name="Build-Time" value="${DSTAMP}${TSTAMP}"/>
        <section name="common">
          <attribute name="Specification-Title" value="${name}"/>
          <attribute name="Specification-Version" value="${version}"/>
          <attribute name="Specification-Vendor" value="OpenQA.org"/>
        </section>
      </manifest>
      <zipfileset src="${dist}/lib/${artifact}-${version}.jar"/>
      <zipfileset src="${basedir}/../lib/jetty-6.0.2.jar"/>
      <zipfileset src="${basedir}/../lib/jetty-util-6.0.2.jar"/>
      <zipfileset src="${basedir}/../lib/servlet-api-2.5-6.1.5.jar"/>
      <zipfileset src="${basedir}/../lib/commons-httpclient-3.0.1.jar"/>
      <zipfileset src="${basedir}/../lib/commons-codec-1.3.jar"/>
      <zipfileset src="${basedir}/../lib/commons-logging-1.0.4.jar"/>
    </jar>
  </target>

  <target name="clean" description="Remove generated artifacts">
    <delete dir="target"/>
  </target>

  <property name="host" value="localhost"/>
  <property name="port" value="5555"/>
  <property name="hubURL" value="http://localhost:4444"/>
  <property name="environment" value="*chrome"/>
  <property name="seleniumArgs" value=""/>
  <target name="run" description="Launch a remote control">
    <java classpathref="runtime.classpath"
          classname="com.thoughtworks.selenium.grid.remotecontrol.SelfRegisteringRemoteControlLauncher"
          fork="true"
          failonerror="true">
      <arg value="-port"/>
      <arg value="${port}"/>
      <arg value="-host"/>
      <arg value="${host}"/>
      <arg value="-hubURL"/>
      <arg value="${hubURL}"/>
      <arg value="-env"/>
      <arg value="${environment}"/>
      <arg line="${seleniumArgs}"/>
    </java>
  </target>

  <target name="run-echo" description="Launch a echo remote control">
    <java classpathref="runtime.classpath"
          classname="com.thoughtworks.selenium.grid.remotecontrol.instrumentation.EchoRemoteControl"
          fork="true"
          failonerror="true">
      <arg value="-port"/>
      <arg value="${port}"/>
      <arg value="-host"/>
      <arg value="${host}"/>
      <arg value="-hubURL"/>
      <arg value="${hubURL}"/>
      <arg value="-env"/>
      <arg value="${environment}"/>
      <arg line="${seleniumArgs}"/>
    </java>
  </target>

</project>
